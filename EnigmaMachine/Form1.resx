<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>